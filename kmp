package KMP;

import java.util.Arrays;

public class KMP {
    private int[] getPrefix(String pattern) {

	int len = pattern.length();

	int[] res = new int[len + 1];

	res[0] = -1;
	int j = -1;
	int i = 0;

	while (i < len) {
	    while (j >= 0 && pattern.charAt(i) != pattern.charAt(j)) {
		j = res[j];
	    }

	    i++;
	    j++;
	    res[i] = j;
	}

	return res;
    }

    public void strStr(String text, String pattern) {
	if (text == null || pattern == null) {
	    return;
	}

	if (text.length() < pattern.length()) {
	    return;
	}

	int[] prefix = getPrefix(pattern);
	int lent = text.length();
	int lenp = pattern.length();
	int i = 0;
	int j = 0;

	while (i < lent) {
	    while (j >= 0 && text.charAt(i) != pattern.charAt(j)) {
		j = prefix[j];
	    }

	    i++;
	    j++;

	    if (j == lenp) {
		System.out.println(i - lenp);
		j = prefix[j];
	    }
	}

	return;
    }

    public static void main(String[] args) {
	String pattern = "abc";
	String text = "abckjfoiwjjfabcjkldasjklfjdkaslcbababaabccbjkflwabc";
	new KMP().strStr(text, pattern);
    }
}
